import React, { useState } from 'react';
import { View, Text, FlatList, Image, TouchableOpacity, StyleSheet } from 'react-native';

import { NativeStackScreenProps } from '@react-navigation/native-stack';
import type { RootStackParamList } from '../App'; 
import { FontAwesome } from '@expo/vector-icons'; // D√πng icon tr√°i tim

// ----------------------------------------------------
// 1. ƒê·ªäNH NGHƒ®A TYPESCRIPT CHO COMPONENT V√Ä D·ªÆ LI·ªÜU
// ----------------------------------------------------

// Ki·ªÉu d·ªØ li·ªáu cho m·ªôt s·∫£n ph·∫©m
type Product = {
  id: string;
  name: string;
  price: number;
  image: number; // type for require() results
  type: 'Roadbike' | 'Mountain';
};

// Ki·ªÉu Props cho Screen2 (ƒë·∫£m b·∫£o n√≥ nh·∫≠n ƒë·ªëi t∆∞·ª£ng navigation)
type Screen2Props = NativeStackScreenProps<RootStackParamList, 'Screen2'>;

// ----------------------------------------------------
// 2. D·ªÆ LI·ªÜU S·∫¢N PH·∫®M (ƒê√É ƒê∆Ø·ª¢C ƒê·ªäNH KI·ªÇU)
// ----------------------------------------------------
const products: Product[] = [
  // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n h√¨nh ·∫£nh l√† ch√≠nh x√°c
  { id: '1', name: 'Pinarello', price: 1800, image: require('../assets/bione-removebg-preview.png'), type: 'Roadbike' },
  { id: '2', name: 'Pina Mountai', price: 1700, image: require('../assets/bithree_removebg-preview.png'), type: 'Mountain' },
  { id: '3', name: 'Pina Bike', price: 1500, image: require('../assets/bitwo-removebg-preview.png'), type: 'Roadbike' },
  { id: '4', name: 'Pinarello', price: 1900, image: require('../assets/bithree_removebg-preview.png'), type: 'Mountain' },
  { id: '5', name: 'Pinarello', price: 2700, image: require('../assets/bitwo-removebg-preview.png'), type: 'Roadbike' },
  { id: '6', name: 'Pinarello', price: 1350, image: require('../assets/bione-removebg-preview.png'), type: 'Mountain' },
];

// ----------------------------------------------------
// 3. COMPONENT SCREEN2 (S·ª¨ D·ª§NG PROPS THAY V√å useNavigation)
// ----------------------------------------------------
export default function Screen2({ navigation }: Screen2Props) {
  // ƒê·ªãnh ki·ªÉu cho state
  const [dataList, setDataList] = useState<Product[]>(products);
  const [selected, setSelected] = useState<'All' | 'Roadbike' | 'Mountain'>('All'); // Ch·ªâ d√πng 3 lo·∫°i n√†y

  const getData = (nameSearch: 'All' | 'Roadbike' | 'Mountain') => {
    setSelected(nameSearch);

    if (nameSearch === 'All') {
      setDataList(products);
    } else {
      // üí° S·ª≠a logic l·ªçc: L·ªçc theo thu·ªôc t√≠nh `type` thay v√¨ `name`
      const filtered = products.filter((item) => item.type === nameSearch);
      setDataList(filtered);
    }
  };
  
  // H√†m ƒëi·ªÅu h∆∞·ªõng t·ªõi Screen3
  const handleNavigateToDetail = (item: Product) => {
    // üí° ƒêi·ªÅu h∆∞·ªõng t·ªõi 'Screen3' v√† truy·ªÅn bikeId (ch·ªâ c·∫ßn ID)
    navigation.navigate('Screen3', { bikeId: item.id });
  };

  const renderButton = (label: 'All' | 'Roadbike' | 'Mountain') => (
    <TouchableOpacity
      style={[styles.filterButton, selected === label && styles.filterButtonActive]}
      onPress={() => getData(label)}>
      <Text style={[styles.filterText, selected === label ? styles.filterTextActive : styles.filterTextNormal]}>
        {label}
      </Text>
    </TouchableOpacity>
  );

  const renderProductItem = ({ item }: { item: Product }) => (
    <TouchableOpacity
      style={styles.card}
      onPress={() => handleNavigateToDetail(item)}
    >
      <TouchableOpacity style={styles.iconHeart}>
        <FontAwesome name="heart-o" size={18} color="black" />
      </TouchableOpacity>
      
      <View style={styles.imgContainer}>
        <Image source={item.image} style={styles.imgCard} />
      </View>
      
      <Text style={styles.productName}>{item.name}</Text>
      <Text style={styles.productPrice}>${item.price}</Text>
    </TouchableOpacity>
  );

  return (
    <View style={styles.container}>
      {/* üí° Lo·∫°i b·ªè title "The world's Best Bike" v√¨ n√≥ ƒë√£ ƒë∆∞·ª£c ƒë·∫∑t trong header c·ªßa App.tsx */}

      <View style={styles.listButton}>
        {renderButton('All')}
        {renderButton('Roadbike')}
        {renderButton('Mountain')}
      </View>

      <FlatList
        data={dataList}
        keyExtractor={(item) => item.id.toString()}
        numColumns={2}
        renderItem={renderProductItem}
        columnWrapperStyle={styles.row}
        contentContainerStyle={styles.listContent}
        showsVerticalScrollIndicator={false}
      />
    </View>
  );
}

// ----------------------------------------------------
// 4. CH·ªàNH S·ª¨A STYLES (THEO GIAO DI·ªÜN)
// ----------------------------------------------------
const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white',
    paddingHorizontal: 15, // Thay ƒë·ªïi padding ƒë·ªÉ s√°t v·ªõi giao di·ªán
    paddingTop: 10,
  },
  listButton: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    marginBottom: 15,
  },
  filterButton: {
    // Thay ƒë·ªïi style button
    paddingHorizontal: 25,
    paddingVertical: 8,
    borderRadius: 10,
    backgroundColor: '#EBEBEB',
    width: '31%', // ƒê·∫£m b·∫£o 3 n√∫t v·ª´a v·∫∑n
    justifyContent: 'center',
    alignItems: 'center',
  },
  filterButtonActive: {
    backgroundColor: '#E94141',
  },
  filterText: {
    fontWeight: '500',
    color: '#333',
    fontSize: 16,
  },
  filterTextActive: {
    color: 'white',
    fontWeight: 'bold',
  },
  filterTextNormal: {
      color: '#333',
  },
  row: { 
      justifyContent: 'space-between', 
  },
  listContent: {
    paddingBottom: 20,
  },
  card: {
    // Style cho t·ª´ng s·∫£n ph·∫©m
    flex: 1,
    margin: 5,
    padding: 10,
    paddingTop: 20,
    backgroundColor: '#EBEBEB', 
    borderRadius: 20,
    alignItems: 'center',
    maxWidth: '48%', 
  },
  iconHeart: {
      position: 'absolute',
      top: 10,
      right: 10,
      zIndex: 1,
  },
  imgContainer: {
    width: '100%',
    height: 100,
    marginBottom: 10,
    justifyContent: 'center',
    alignItems: 'center',
  },
  imgCard: {
    width: '100%',
    height: '100%',
    resizeMode: 'contain',
  },
  productName: {
    fontSize: 16,
    fontWeight: 'bold',
    textAlign: 'center',
    marginTop: 5,
  },
  productPrice: {
    fontSize: 18,
    color: '#E94141',
    fontWeight: 'bold',
    textAlign: 'center',
    marginTop: 5,
  },
});